name: Build and publish to TestPyPI or PyPI
on: [push, pull_request]

jobs:
  get_python_versions:
    name: "Determine Python versions"
    runs-on: ubuntu-latest
    outputs:
      min-python: ${{ steps.nep29.outputs.min-python }}
      max-python: ${{ steps.nep29.outputs.max-python }}
    steps:
      - name: "calculate versions according to NEP29"
        id: nep29
        uses: mstimberg/github-calc-nep29@v0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [get_python_versions]
    name: Build ðŸŽ¡ and source ðŸ“¦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # we need the full history for the version calculation
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Build source tarball and noarch wheel
        run: |
          python -m pip install --upgrade pip build wheel
          python -m build
      - name: store distribution ðŸ“¦
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist

  deploy_dev:
    name: Publish development ðŸ“¦ to TestPyPI
    runs-on: ubuntu-latest
    if: github.repository == 'brian-team/brian2genn' && github.ref == 'refs/heads/master'
    environment: development_release
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    needs:
      - build
    steps:
      - name: load distribution ðŸ“¦
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  deploy:
    name: Publish release ðŸ“¦ to PyPI
    runs-on: ubuntu-latest
    if: github.repository == 'brian-team/brian2genn' && startsWith(github.ref, 'refs/tags')
    environment: release
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    needs:
      - build
    steps:
      - name: load distribution ðŸ“¦
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - name: Publish distribution release ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
